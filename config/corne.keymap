/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    // Key position definitions for Corne 42-key layout
    // Layout:
    //  0  1  2  3  4  5    6  7  8  9 10 11
    // 12 13 14 15 16 17   18 19 20 21 22 23
    // 24 25 26 27 28 29   30 31 32 33 34 35
    //          36 37 38   39 40 41

    behaviors {
        // urob's timeless homerow mods implementation
        // Uses macro-style definition with optimized parameters

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            // Right side keys + thumbs (urob's approach)
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            // Left side keys + thumbs (urob's approach)
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        ToggleWindows {
            bindings = <&tog 2>;
            key-positions = <0 33 34 35>;
        };

        SELECT_BT_0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <1 33 35 34>;
        };

        SELECT_BT_1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <2 33 34 35>;
        };

        CLEAR_BT {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <13 33 34 35>;
        };

        Ops_layer {
            bindings = <&tog 4>;
            key-positions = <29 33 34 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_0 {
            display-name = "mac_0";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | GUI  | A/GUI | S/ALT | D/CTRL | F/SHFT |  G  |   |  H  | J/SHFT | K/CTRL | L/ALT | =/GUI |  `   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  -  |  '  |  /  | ENT  |
            //                    | ALT | LWR | SPC |   |  ;  |  ,   |  .  |

            bindings = <
&kp TAB       &kp Q                &kp W        &kp E            &kp R         &kp T        &kp Y          &kp U         &kp I             &kp O             &kp P                     &kp BSPC
&kp LEFT_GUI  &hml LEFT_CONTROL A  &hml LALT S  &hml LEFT_GUI D  &hml LSHFT F  &kp G        &kp H          &hmr RSHFT J  &hmr RIGHT_GUI K  &hmr RALT L       &hmr RIGHT_CONTROL EQUAL  &kp GRAVE
&kp LSHFT     &kp Z                &kp X        &kp C            &kp V         &kp B        &kp N          &kp M         &kp MINUS         &kp SINGLE_QUOTE  &kp FSLH                  &kp ENTER
                                                &kp LEFT_ALT     &mo 1         &kp SPACE    &kp SEMICOLON  &kp COMMA     &kp PERIOD
            >;
        };

        mac_1 {
            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5    &trans    &kp LBKT      &kp RBKT      &trans    &trans    &trans
&trans   &kp N6  &kp N7  &kp N8            &kp N9  &kp N0    &trans    &kp LS(LPAR)  &kp LS(RPAR)  &trans    &kp UP    &trans
&trans   &trans  &trans  &trans            &trans  &trans    &kp BSLH  &kp LS(LBRC)  &kp LS(RBRC)  &kp LEFT  &kp DOWN  &kp RIGHT
                         &kp LEFT_CONTROL  &trans  &trans    &trans    &trans        &trans
            >;
        };

        windows_0 {
            display-name = "windows_0";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL | A/GUI | S/ALT | D/CTRL | F/SHFT |  G  |   |  H  | J/SHFT | K/CTRL | L/ALT | =/GUI |  `   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  -  |  '  |  /  | ENT  |
            //                    | ALT | LWR | SPC |   |  ;  |  ,   |  .  |

            bindings = <
&kp TAB           &kp Q        &kp W        &kp E         &kp R         &kp T        &kp Y          &kp U         &kp I         &kp O             &kp P            &kp BSPC
&kp LEFT_CONTROL  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G        &kp H          &hmr RSHFT J  &hmr RCTRL K  &hmr RALT L       &hmr RGUI EQUAL  &kp GRAVE
&kp LSHFT         &kp Z        &kp X        &kp C         &kp V         &kp B        &kp N          &kp M         &kp MINUS     &kp SINGLE_QUOTE  &kp FSLH         &kp ENTER
                                            &kp LEFT_ALT  &mo 3         &kp SPACE    &kp SEMICOLON  &kp COMMA     &kp PERIOD
            >;
        };

        windows_1 {
            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3        &kp N4  &kp N5    &rgb_ug RGB_ON   &kp LBKT      &kp RBKT      &trans    &trans    &trans
&trans   &kp N6  &kp N7  &kp N8        &kp N9  &kp N0    &rgb_ug RGB_OFF  &kp LS(LPAR)  &kp LS(RPAR)  &trans    &kp UP    &trans
&trans   &trans  &trans  &trans        &trans  &trans    &kp BSLH         &kp LS(LBRC)  &kp LS(RBRC)  &kp LEFT  &kp DOWN  &kp RIGHT
                         &kp LEFT_GUI  &trans  &trans    &trans           &trans        &trans
            >;
        };

        ops_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_ON   &rgb_ug RGB_OFF  &rgb_ug RGB_BRI     &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_UP  &kp C_VOL_DN     &kp C_FAST_FORWARD  &kp C_REWIND     &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &trans           &trans              &trans           &trans           &trans
                        &trans  &trans  &trans    &trans           &trans           &trans
            >;
        };
    };
};
